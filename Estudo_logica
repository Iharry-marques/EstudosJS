Problema 2 - Valor por hora

Escreva um programa que retorna o valor hora de um funcionário com base no seu salário mensal e horas trabalhadas por mês.

Problema.
1. Quais são os dados de entrada necessários ?

* Salário mensal
* Horas trabalhadas por mês

2. O que eu devo fazer com estes dados ?

* devo usar eles para calcular o valor hora que um funcionário recebe usando o cálculo salário mensal/horas trabalhadas

3. Quais são as restrições deste problema ?

* Os valores devem ser entregues somente em formato de salário por hora

4. Qual é o resultado esperado ?

* O valor hora que um funcionário recebe

5. Qual é a sequência de passos a ser feitas para chegar ao resultado esperado ?

* perguntar quanto a pessoa ganha por mês
* guardar essa informação
* perguntas quantas horas ela trabalha por mês
* guarda essa informação
* calcular o valor hora da pessoa (salário mensal / horas trabalhadas)
* exibir o valor hora daquela pessoa

3. Chute o número

Escreva um programa que, ao iniciar gera um avalor aleatório de 1 a 10 e permite que o usuário chute um número até que o valor aleatório gerado no início do programa seja chutado corretamente.

O programa deve informar se o chute foi acima, abaixo ou igual ao valor aleatório gerado no início do programa.

1. Quais são os dados de entrada necessários ?

* um valor aleatório de 1 a 10
* um chute do usuário

2. O que devo fazer com estes dados ?

* Devo pegar o valor aleatório de 1 a 10 que foi gerado e comparar com o valor que foi chutado pelo usuário.
* Se o chute for maior ou menor que valor gerado, alertar o usuário sobre isso e o deixar jogar novamente até que acerta o número que foi gerado.

3. Quais são as restrições deste problema ?

* O programa não deve ser finalizado até que um valor seja chutado corretamente.
* O usuário deverá ser capaz de jogar quntas vezes quiser.

4. Qual é o resultado esperado ?

* O programa identificar que o valor chutado pelo usuário é igual ao valor gerado no início do programa.

5. Qual é a sequência de passos a ser feitas para chegar ao resultado esperado ?

1. gerar um valor aleatório de 1 a 10.
2. armazenar este valor.
3. receber o chute do usuário.
4. comparar o chute do usuário com o valor aleatório gerado.
5. se o chute for maior que o valor gerado, exibir "Chutou alto" e voltar ao passo 3.
6. se o chute for menor que o valor gerado, exibir "Chutou baixo" e voltar ao passo 3.
7. se o chute for igual que o valor gerado, exibir "Acertou" e voltar ao passo 1.

====================================================

Conceitos Obrigatórios ser capaz de resolver problemas !

1. Variáveis
2. Condicionais
3. Laços de repetição
4. Coleções

                Variáveis
* Quando você ouve o nome de alguém, o que você faz com este nome ?
* Você tenta guardar ele certo ?
* Onde você guardar ele ? Você guarda ele na sua memória.
* Quando alguém te passa uma data de uma consulta, o que você faz com essa data ?
* Você anota ela em algum lugar para se lembrar daquilo ou simplesmente tenta guardar aquela informação na sua mente certo ?
* Quando alguém te diz para ir ao supermercado e comprar 1 barra de chocolate, você guarda ou anota essa informação em algum lugar também certo ?

Problema 2 - valor por hora

Escreva um programa que retorna o valor hora de um funcionário com base no seu salário mensal e horas trabalhadas por mês.

* Salário mensal
* Horas trabalhadas por mês
* Valor hora

                Condicionais
* Quando alguém te oferece um panfleto na rua você pega ele sem pensar ?
* Quando descobre que algo que você quer muito comprar está na promoção, você compra ela direto sem pensar antes ?

Problema 3 - Chute o número 

Escreva um programa que, ao iniciar gera um avalor aleatório de 1 a 10 e permite que o usuário chute um número até que o valor aleatório gerado no início do programa seja chutado corretamente.

O programa deve informar se o chute foi acima, abaixo ou igual ao valor aleatório gerado no início do programa.

        * neste caso podemos identificar algumas condicionais:

* Se o número chutado for menor que o número gerado, então avise que deve chutar mais alto

* Se o número chutado for maior que o número gerado, então avise que deve chutar mais baixo

* Se o número chutado for igual que o número gerado, então avise que ele acertou.


                Laços de repetição
No mundo real e na programação, temos diversas situações onde precisamos fazer uma ação várias vezes ou por uma determinada quantidade de vezes. Ex:

* cortar um pão
* Varrer o chão
* Dar vários passos para chegar até um lugar

Laços de repetição:
Cenário real:

* Vamos dizer que para derrubar uma árvore, tenha que dar 11 machadadas nela.

* Então você teria que criar um comando que mande a pessoa dar 11 machadadas na arovre e com isso feito, a árvore cairia.

Cenário Real 2:

Crie um programa que recebe um número e o incrementa por 1 por 10 vezes.

* valor = 10
* 1° repetição | valor = valor +1 | 11
* 2° repetição | valor = valor +1 | 12
* 3° repetição | valor = valor +1 | 13
* 4° repetição | valor = valor +1 | 14
* 5° repetição | valor = valor +1 | 15
* 6° repetição | valor = valor +1 | 16
* 7° repetição | valor = valor +1 | 17
* 8° repetição | valor = valor +1 | 18
* 9° repetição | valor = valor +1 | 19
* 10° repetição | valor = valor +1 | 20

Laços de repetição
Ponto em comum

Normalmente possuem um ponto inicial e um ponto final, ou em alguns casos uma condição que irá significar o final daquele laço de repetição, ex:

* Deixe a torneira aberta até que o copo eteja cheio de água
* Nade até chegar ao outro lado da piscina
* Some todos os valores até enquanto o valor for menor que 100
* Dê machadadas na árvore até que ela caia

Laços de repetição
Pontos chaves

- Uteis para conseguir automatizar processos.
- É possivel definir por quantas vezes algo deve ser executado.
- Possuem ponto de início e fim.
- Podem estar atrelados a uma condição


                Coleções

Em muitos casos, você terá a necessidade de trabalhar com coleções de valores que estão armazenador em um local só, ex:

* convidados = ['Jeff', 'Amanda', 'Carol', 'Robert',]
* numeros_premiados = [12,67,34,100,55]

Exemplo de uso de coleções - Chute o número

Dado uma coleção de dados "idades" [15,46,75,34,23] imprima na tela a soma destes valores.

* Definir o total como 0
* Passar pelo 1° valor e somar ele ao total
* Passar pelo 2° valor e somar ele ao total
* Passar pelo 3° valor e somar ele ao total
* Passar pelo 4° valor e somar ele ao total
* Passar pelo 5° valor e somar ele ao total
* Exibir o valor total

====================================================

1. Como podemos demonstrar a solução para um problema ?

1. Pseudocódigo
2. Fluxogramas

* O pseudocódigo é uma descrição dos passos necessários para resolver um determinado problema em uma liguagem natural, que não está ligada diretamente a uma linguagem de programação.

OBS: * Pseudocódigo não é uma linguagem de programação

    * A ideia toda do pseudocódigo é de escrever algo em uma linguagem natural que pode ser lida por qualquer pessoa.

    * Pseudocódigo não é padronizado, pode ser escritos de várias maneiras. Não há um padrão certo ou errado de o escrever.
    
    * Não será processado por um computador

    * Não substitui uma linguagem de programação real

    * Deve ser usado apenas para criar uma lógica para resolver um problema e depois escrito em uma linguagem de programação real como Python, JavaScript, C# ou Java

    * Não vale a pena na minha visão se tornar um especialista em pseudocódigo ou em linguagens de "aprendizado" como a linguagem de programação "portugol".

    Exemplo #1 -  Pseudocódigo

    Valor por hora

    1. Crie um programa que retorne o valor hora de um funcionário com base no seu salário mensal e horas trabalhadas por mês.

    Métodos 5Qs para montar um algorítimo:

    Analise criticamente o problema e descubra:( Tente explicar este problema para você mesmo em voz alta e peça mais informações/investigue mais até você compreender completamente o problema.)

    1. Quais são os dados de entrada necessários ?
    2. O que devo fazer com estes dados ?
    3. Quais são as restrições deste problema ?
    4. Qual é o resultado esperado ?
    5. Qual é a sequência de passos a ser feitas para chegar ao resultado esperado ? (Faça essa parte em pseudocódigo)

    Problema 1 - Valor por hora
    1. Quais são os dados de entrada necessários ?

    Escreva um programa que retorna o valor hora de um funcionários com base no seu salário mensal e horas trabalhadas por mês.

    * salário mensal
    * horas trabalhadas por mês

    2. O que devo fazer com estes dados ?

    * Devo usar eles para calcular o valor hora que um funcionário recebe usando o cálculo salário mensal / horas trabalhadas

    3. Quais são as restrições deste problema ?

    * Os valores devem ser entregues somente em formado de salário por hora

    4. Qual o resultado esperado ?

    * O valor hora que um funcionário recebe

    5. Qual é a sequência de passos a ser feitas para chegar ao resultado esperado ?

    (input: palavra usada para receber dados do usuário

    print: exibir algo

    if condição: condicional que controla se algo deve ou não ser feito

    else: clásula a ser executada caso nenhuma condicional if seja executada

    loop de X a Y: laço de repetição que ira iterar de X a Y

    Loop x em Y: laço de repetição que irá iterar X em uma coleção Y

    While X: laço de repetição que acontecerá enquanto um condição for verdadeira)

        input valor_aleatorio entre 1 a 10
        acertou = falso
        while acertou = falso
        input chute
        if chute > valor_aleatorio
                print "Chute é maior que valor gerado"
        if chute <valor_aleatorio
                print "Chute é menor que valor gerado"
        if chute = valor_aleatorio
                print "Acertou o chute"
                acertou = verdadeiro
        else 
                print "Chutou valor invalido"

** Não existe pseudocódigo perfeito **
* é absolutamente normal achar dificil no 1° contato

- Fluxogramas - uma representação visual gráfica de um algorítimo.

Aula de Python

anotações
# Variáveis 

velocidade_internet = 10
================================================

1. Crie um programa que retorne o valor hora de um funcionário com base no seu salário mensal e horas trabalhadas por mês.

input salario_mensal
input horas_trabalhadas_por_mes
valor_hora = salario_mensal / horas_trabalhadas_por_mes
print valor_hora


no python ===

salario_mensal = input('Qual é o seu salario mensal ?')
horas_trabalhadas_por_mes = input('Quantas horas trabalha por mês ?')

valor_hora = int(salario_mensal) / int(horas_trabalhadas_por_mes)

print(valor_hora)

salario_mensal = input('Qual é o seu salario mensal ?')
horas_trabalhadas_por_mes = input('Quantas horas trabalha por mês ?')

valor_hora = int(salario_mensal) / int(horas_trabalhadas_por_mes)

print(valor_hora)

=====================================================================

Condicionais 
if, elif e else

E ae Jhonatan, bora dar uma saída hoje ?
Se eu terminar meu trabalho aqui, eu consigo.

trabalho_terminado = True
if trabalho_terminado == True:
  print("Opá, bora dar uma saída !")
else:
  print("Não posso sair agora.")

exemplo 2

Ei, Consegue me ajudar a mover essas caixas lá para fora hoje a tarde ?

Se eu estiver livre, sim. Mas, se não der pede meu irmao para te ajudar 


estou_livre = False
if estou_livre == True:
  print("Ok, posso ajudar hoje sim !")
else:
  print("Peça ao meu irmão para te ajudar")


exemplo 3

Eu cheguei atrasado na aula, ainda posso entrar ?

Se essa não for sua terceira vez chegando atrasado, então pode sim, caso contrário irá tomar uma suspensão

numero_atrasos = 2
if numero_atrasos >= 3:
  print("Você esta suspenso")
elif numero_atrasos == 1:
  print("Pode entrar, porém caso tome mais 2 faltas,ira ser suspenso")
elif numero_atrasos == 2:
  print("Pode entrar, porém caso tome mais 1 falta, sera suspenso")
else:
  print("Pode entrar =)")

=====================================================================

input primeiro_valor
input segundo_valor
if primeiro_valor > segundo valor
        print o primeiro valor é maior
else
        print o segundo valor é maior

